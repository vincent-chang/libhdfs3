name: LinuxRelease
on:
  workflow_dispatch:
  repository_dispatch:
  push:
    branches:
      - '**'
      - '!main'
      - '!feature'
    tags:
      - '**'
    paths-ignore:
      - '**.md'
      - 'tools/**'
      - '.github/workflows/**'
      - '!.github/workflows/LinuxRelease.yml'

  pull_request:
    types: [opened, reopened, ready_for_review]
    paths-ignore:
      - '**.md'
      - 'tools/**'
      - '.github/workflows/**'
      - '!.github/workflows/LinuxRelease.yml'


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/main' || github.sha }}
  cancel-in-progress: true

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
 build_job:
   runs-on: ubuntu-latest
   name: Build on $({ matrix.distro }} ${{ matrix.arch }}
   if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main' || github.repository != 'duckdb/duckdb'

   strategy:
     matrix:
       include:
         - arch: x86_64
           distro: ubuntu18.04
         - arch: aarch64
           distro: ubuntu18.04

   steps:
     - uses: actions/checkout@v3
       with:
         fetch-depth: 0

     - uses: uraimo/run-on-arch-action@v2
       name: Build artifact
       id: build
       with:
         arch: ${{ matrix.arch }}
         distro: $({ matrix.distro }}
         shell: /bin/bash
         setup: |
           mkdir -p "${PWD}/build"
         dockerRunArgs: |
           --volume "${PWD}/build:/build"
         env: |
           artifact_name: libhdfs3.$({ matrix.distro }}_${{ matrix.arch }}
         install: |
           apt-get update -y -qq
           apt-get install -y -qq software-properties-common
           add-apt-repository ppa:git-core/ppa
           apt-get update -y -qq
           apt-get install -y -qq make gcc g++ automake autoconf wget curl zip libssl-dev unzip libcurl4-gnutls-dev libexpat1-dev gettext build-essential checkinstall libffi-dev libxml2-dev uuid-dev libgtest-dev libkrb5-dev libgsasl7-dev libboost-all-dev
           cd /build
           wget https://github.com/git/git/archive/refs/tags/v2.18.5.tar.gz
           tar -xzvf v2.18.5.tar.gz
           cd git-2.18.5
           make
           make prefix=/usr install
           git --version
